{"ast":null,"code":"var _jsxFileName = \"/Users/bozhidarayvazov/dev/Full Stack Projects/XSSContainer/twitter/src/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [postData, setPostData] = useState(null);\n  const endpoint = 'http://localhost:8080/posts';\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setPostData(await fetch(endpoint).then(response => response.json()));\n      } catch (error) {\n        console.log(\"Some Error occured when fetching posts\");\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: postData ? /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      },\n      children: postData.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: post.userName,\n              src: \"/static/images/avatar/1.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: post.title,\n            by: true,\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: 'inline'\n                },\n                component: \"span\",\n                variant: \"body2\",\n                color: \"text.primary\",\n                children: post.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  \"__html\": post.content\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading content...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"/Od/CiV2EtHRGRcbdamQhUNXeuI=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","jsxDEV","_jsxDEV","Feed","_s","postData","setPostData","endpoint","fetchPosts","fetch","then","response","json","error","console","log","children","sx","width","maxWidth","bgcolor","map","post","alignItems","alt","userName","src","fileName","_jsxFileName","lineNumber","columnNumber","primary","title","by","secondary","Fragment","display","component","variant","color","dangerouslySetInnerHTML","content","_c","$RefreshReg$"],"sources":["/Users/bozhidarayvazov/dev/Full Stack Projects/XSSContainer/twitter/src/Feed.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\n\nconst Feed = () => {\n\n    const [postData, setPostData] = useState(null);\n    const endpoint = 'http://localhost:8080/posts';\n\n    useEffect(()=> {\n        const fetchPosts = async() => {\n            try {\n                setPostData(\n                    await fetch(endpoint)\n                    .then((response) => response.json())\n                )\n            } catch(error){\n                console.log(\"Some Error occured when fetching posts\")\n            }\n        };\n        fetchPosts();\n    },[]);\n\n\n    return (\n        <div>\n            {postData ? (\n                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                {postData.map((post) => (\n                    <div>\n                        <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                            <Avatar alt={post.userName} src=\"/static/images/avatar/1.jpg\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary= {post.title} by\n                            secondary={\n                                <React.Fragment>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                >\n                                    {post.userName}\n                                </Typography>\n                                 <div dangerouslySetInnerHTML={{\"__html\":post.content}}></div>\n                                </React.Fragment>\n                            }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>  \n                ))}\n            </List>\n            ): (\n                <div>\n                    Loading content...\n                </div>\n                \n            )}\n        </div>\n    );\n};\n\nexport default Feed;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}